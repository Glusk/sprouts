name: Automated Comment Release
on:
  issue_comment:
    types: [created]
jobs:
  release:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, 'Github, please release version:')
    env:
      MSG_REGEX: "Github, please release version: v[0-9]+.[0-9]+.[0-9]+"
      TAG_REGEX: "v[0-9]+.[0-9]+.[0-9]+"
    steps:
      - 
        name: "Notify that a new release has been started"
        run: |-
            curl --request POST \
            --url ${{ github.event.comment.issue_url }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "body": "> ${{ github.event.comment.body }} \n\n A new automated release process has been started!"
              }'
      - name: Checkout master branch
        uses: actions/checkout@master
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.1
      - name: Install Android packages
        run: sdkmanager "platforms;android-28" "platform-tools" "build-tools;28.0.3"
      - name: Initialize Git user
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Tag a new release
        run: |
          # Get the tag from ${{ github.event.comment.body }}
          tag=$(echo ${{ github.event.comment.body }} | grep -E "$MSG_REGEX" | grep -Eo "$TAG_REGEX")
          if [[ $tag == "" ]]; then return -1; fi
          # Strip the 'v' prefix from the tag for version
          version=${tag#"v"}
          # Bump versions
          perl -i.orig -pe '/versionCode/ && s/([0-9]+)/$1+1 . $2/e' android/build.gradle
          chmod +x gradlew
          ./gradlew updateVersion -Prelease.useAutomaticVersion=true -Prelease.newVersion=$version
          # Tag the new version
          git commit -am "Bumped project version to $tag"
          git tag -a $tag -m "Release $tag"
      - name: Generate Android release APK
        run: ./gradlew android:assembleRelease
      - name: Sign Android release APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: android/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          # override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "28.0.3"
        # Example use of `signedReleaseFile` output -- not needed
      - name: Tag Android release APK
        run: mv ${{steps.sign_app.outputs.signedReleaseFile}} android/build/outputs/apk/release/sprouts-$tag.apk
      - name: Generate desktop release
        run: |
          ./gradlew desktop:dist
          mv desktop/build/libs/desktop-*.jar desktop/build/libs/sprouts-$tag.jar
      - name: Generate HTML release
        run: |
          ./gradlew html:dist
          zip -r sprouts-$tag.zip ./html/build/dist/
      - name: Butler deploy
        run: bash ./deploy.sh
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      - name: Error message
        if: failure()
        run: |-
            curl --request POST \
            --url ${{ github.event.comment.issue_url }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "body": "> ${{ github.event.comment.body }} \n\nRelease failed!"
              }'
      - name: Bump to snapshot
        run: |
          ./gradlew updateVersion -Prelease.useAutomaticVersion=true -Prelease.newVersion=$version-SNAPSHOT
          git commit -am "Bumped project version to $tag-SNAPSHOT"
            # Notify
            curl --request POST \
            --url --url ${{ github.event.comment.issue_url }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "body": "> ${{ github.event.comment.body }} \n\nSuccessfully released a new version! See [tags](https://github.com/${{ github.repository }}/tags/)."
              }'
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
